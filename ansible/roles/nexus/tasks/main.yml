- name: install container
  docker_container:
    name: nexus
    image: "sonatype/nexus3"
    detach: yes
    ports:
      - "{{nexusInsecurePort}}:8081"
      - "{{dockerRegistryInsecurePort}}:{{dockerRegistryInsecurePort}}"
    volumes:
      - nexus-data:/nexus-data
    restart_policy: always
  tags: [nexus]

- name: create scripts
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
  loop: "{{allScripts}}"
  tags: [nexus]

- name: wait until app is ready
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}"
    method: GET
  register: result
  until: result.status == 200
  retries: 10
  delay: 10
  tags: [nexus]

- name: log with default password
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/script"
    method: GET
    user: "{{nexusRegistryUserName}}"
    password: "{{defaultAdminPass}}"
    force_basic_auth: yes
  register: defaultPasswordResult
  ignore_errors: yes
  tags: [nexus]

- name: set default as access password
  set_fact:
    nexusUserPass: "{{defaultAdminPass}}"
  when: defaultPasswordResult.status == 200
  tags: [nexus]

- name: set already changed as access password
  set_fact:
    nexusUserPass: "{{nexusRegistryUserPass}}"
  when: defaultPasswordResult.status != 200
  tags: [nexus]

- debug:
    msg: "{{nexusUserPass}}"

- name: get stored scripts
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/script"
    method: GET
    user: "{{nexusRegistryUserName}}"
    password: "{{nexusUserPass}}"
    force_basic_auth: yes
  register: storedScripts
  tags: [nexus]

- name: update existing scripts
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/script/{{item.scriptName}}"
    method: PUT
    src: "{{item.dest}}"
    remote_src: yes
    body_format: json
    user: "{{nexusRegistryUserName}}"
    password: "{{nexusUserPass}}"
    force_basic_auth: yes
    status_code: 204
  loop: "{{allScripts}}"
  when: item.scriptName in (storedScripts | json_query('json[*].name'))
  tags: [nexus]

- name: send new scripts
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/script"
    method: POST
    src: "{{item.dest}}"
    remote_src: yes
    body_format: json
    user: "{{nexusRegistryUserName}}"
    password: "{{nexusUserPass}}"
    force_basic_auth: yes
    status_code: 204
  loop: "{{allScripts}}"
  when: item.scriptName not in (storedScripts | json_query('json[*].name'))
  tags: [nexus]

- name: get stored repositories
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/repositories"
    method: GET
    user: "{{nexusRegistryUserName}}"
    password: "{{nexusUserPass}}"
    force_basic_auth: yes
  register: storedRepositories
  tags: [nexus]

- name: create repos
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/script/{{item.scriptName}}/run"
    method: POST
    body_format: json
    user: "{{nexusRegistryUserName}}"
    password: "{{nexusUserPass}}"
    force_basic_auth: yes
  loop: "{{createRepoScripts}}"
  when: item.repoName is defined and item.repoName not in (storedRepositories | json_query('json[*].name'))
  tags: [nexus]

- name: change admin password
  uri:
    url: "http://{{inventory_hostname}}:{{nexusInsecurePort}}{{baseUrl}}v1/script/{{item.scriptName}}/run"
    method: POST
    body_format: json
    user: "{{nexusRegistryUserName}}"
    password: "{{nexusUserPass}}"
    force_basic_auth: yes
  loop: "{{passwordChangeScripts}}"
  tags: [nexus]